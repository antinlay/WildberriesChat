//
//  quest02.swift
//  WildberriesHash
//
//  Created by Janiece Eleonour on 30.07.2024.
//

import Foundation

func simpleHash(for string: String) -> Int {
    var hashValue = 0

    for char in string.unicodeScalars {
        hashValue = (hashValue << 5) - hashValue + Int(char.value)
    }

    return hashValue
}

/* Объяснение оптимизации:
 (hashValue << 5): Сдвигает hashValue на 5 бит влево, что эквивалентно умножению на 32.
 - hashValue: Вычитает hashValue, что эквивалентно вычитанию 1 от результата умножения на 32, что дает умножение на 31.
 Эта оптимизация может быть полезной на некоторых платформах, где битовые операции выполняются быстрее, чем умножение.

 Число 31 является простым числом, что помогает минимизировать количество коллизий (когда разные строки имеют одинаковые хеш-значения).
 Простые числа имеют тенденцию лучше распределять значения, что делает хеш-функцию более равномерной. Число 31 было использовано в некоторых известных хеш-функциях, таких как хеш-функция в Java для строк. Это делает его хорошо изученным и проверенным выбором. */
